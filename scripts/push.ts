import { Options } from "@layerzerolabs/lz-v2-utilities";
import { task } from "hardhat/config";
import { encodeAbiParameters, parseAbiParameters } from "viem";

const updateFeed =
  "0x504e41550100000003b801000000040d0011b16403e1d7854e5c25cfa29c55cbc3b53607146913c933add09bc6edec833a3d1956c4352461fa502b56e7c609f6fed97ca134121705b373659f14ce7b35630102bb327c5f8df42a332b5442721cab1cd7cd735df9d65a69690a54d9cd13910c6b39eee7dc4ae3473e3af1d31155eab18b1ead8d7041f835eeab86f3ddfe581e030103b16d52057eed783e9677d4433135d24e8661be05e3e3a31ab249d4ed1faf3baa064b9ce87de7522b381f7a329cdfc18688996eb762767e5e8d3044d0973423f5010413e570994cdefa6d6da01af909a99c5c72c0e3eb6e75590c2bc75d6537377bc412e7f6d2798b0609f335b29865a50614591574209c36d283aa4cdb5c4593c7050006bf44bb7da812d5ed9f7b0944974a7d86287dfa2970a0cba90bdf509fc22bae124b622e5c84bda243466ba9d2487bb485409b1afbe26f0608ef5dbcbb2808dea00108bd3c19ef7c432b875c1fb5d3d0a0e6bba2dacac7260d6c68ffcdb77d4b386d1b03aaf2f857606534fd7f108b25ecc6073d628c242bfd7e36f74002822b48c7c7000b46d3abc957b3e89d59d9a6c25c6794187094b013d277682afae8c6ca7b011b684f53c0c15dc1277d88d9a1a50f9933e1a6bccfe3623d9a3dc62be13da0e76a9f000ce9fdce47cc4489efdedfccdc846fc81b58a9875ad0dc11eb98b7d1586f7862ee067ca3edf4bcf0f07e74699532242510c9eaaa786e1e277c7c2b85abff0d7e19000d85d3c162a1e3ab211e9e7fde970e9593466701dd629788237c2484adc42822a3212d60c690a9d1a8910e791e7ef16b7b3c73dafaeb5f77e0f9aa87223c3cab8a000efc84e07f766d0e7fb2dbdff13072d71dc857f06456fe200cb63cadc6acb945e138b2addd0c6a0dd0f7595ce232d9df5ba17018de0639a233423adc8aabbe8411010f2b84e46142a86dc06e343e1000535825533dc3124c3a2e6258cc81e0d9e786d907bcdbf334c87f67b2cca1a9701c25d0bfbadac786acace015b85eb1c28b1b090110ba42d05cb7ae20f09e9d56ed349d0baa7ef323b07cbf4642b29d48c9660b6ef5613014231692817c6965bcace0351acf67c2d3c79fff2a972f889b800a1bbcd20112a5b8a9b11f789129820d438390445487eebfea07c1208d13995de4a77a69f757282a7b8a17933134f630e12ce2af77ac61dbe9f60568d7a749e6855f972b7d4e006693403800000000001ae101faedac5851e32b9b23b5f9411a8c2bac4aae3ed4dd7b811dd1a72ea4aa71000000000418b5020141555756000000000009233945000027103bb4042574999b13c304f911036c4af6284e27c603005500e62df6c8b4a85fe1a67db44dc12de5db330f7ac66b72dc658afedf0f4a415b43000005669d38b05900000000f261b3c2fffffff80000000066934038000000006693403800000568342e7ec000000000e357e3e00b203e1a7ea909c82385bdad7448a5178529c540cd62df6b11933e1b2df5572747903bcce8c826286f8ee43055844f1bed6768f969e8d81bb0ce238e9716569129e603b533f3942ac2996c290371a6bd2bb81a913dd46a8defee172b2962bf4618c42c77c4c3c4f824363a7f2ec229c5f9665301afede094a52c1c7076aadee44c0eead590605a0fe6da869597f09af8efb39873a9a71cd5e30bd689461e593c05844a56922667561f8378cd47a53d51f89677e1d0fcbd072a01d0acc8caf3e78b066da674e77667a9d0e96e00212d72a157cc42d939f51aae2a5153e9005500ff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace00000049e40d9c250000000013da5063fffffff8000000006693403800000000669340380000004a02dedd600000000011a2e87c0bc123034fdab269b8974f50c04b8e579433d949c09a10e9d585e3971593416858791a020e42553d88c7e2d638296b272c5c374d57551d41eab85678b0543c1fb67195e28e7e99c430bb3e2fba560e92920cb643d5da6453fc6eff3bcfdc713c195be2720df94eddffb677204b164470b1db7c38a93d7d8d8d822edae7c83fc1bf7ce0060a7a30c6b6281c1c6fe405f90fda15a3352231a5ec8b45d687c3ae7b3406cfa158f01eb03bb2a5445b014f249e80a981b4b2a994c86a9fd972aed5f1256f307bd237c48120d0e96e00212d72a157cc42d939f51aae2a5153e9005500eaa020c61cc479712813461ce153894a96a6c00b21ed0cfc2798d1f9a9e9c94a0000000005f5e103000000000000ff09fffffff8000000006693403800000000669340380000000005f5dc6400000000000112fe0b56f50081fce7e69a5c1a90c7769c9e5990f9ac1bf31f8ff068a9c49a05d8689de0dec88d731d42dc66e819711cd135528da7682e0ea07a887d72955416569129e603b533f3942ac2996c290371a6bd2bb81a913dd46a8defee172b2962bf4618c42c77c4c3c4f824363a7f2ec229c5f9665301afede094a52c1c7076aadee44c0eead590605a0fe6da869597f09af8efb39873a9a71cd5e30bd689461e593c05844a56922667561f8378cd47a53d51f89677e1d0fcbd072a01d0acc8caf3e78b066da674e77667a9d0e96e00212d72a157cc42d939f51aae2a5153e9";

task("push", "pushes the readAndSend")
  .addParam("contract", "Name of the contract to interact peer with.")
  .addParam("address", "The address of the contract")
  .addParam("params", "The params for readandsend")

  .setAction(async (args, { viem }) => {
    const contract = await viem.getContractAt(args.contract, args.address);
    // Endpoint ID, contract address on the other chain
    const options = Options.newOptions()
      .addExecutorLzReceiveOption(120000, 0)
      .toHex();
  

    // const tx0 = await (contract.write as any).updateFeeds([[updateFeed]], {value: 100000000})
    // console.log(tx0)

    const prices = await (contract.read as any).read();

    console.log(prices);
    const data = encodeAbiParameters(
      [
        { type: "uint256", name: "" },
        { type: "uint256[]", name: "" },
      ],
      [1n, prices]
    );

    const quote = await (contract.read as any).quote([data, options, false]);
    console.log(Number(quote.nativeFee) / 10 ** 18);
    // [[updateFeed], options],

    const tx = await (contract.write as any).readAndSend(
      [options],
      { value: BigInt(quote.nativeFee) * 10n / 9n }
    );
    console.log(tx);
  });
